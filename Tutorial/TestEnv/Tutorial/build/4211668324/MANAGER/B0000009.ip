1,0,B    {
1,1,B    if(Order->Entree == STEAK &&
     Order->Salad == CAESAR &&
     Order->Beverage == MIXED_DRINK)



1,2,S    Order->Dessert = PIE;
1,3,B    if(Order->Entree == LOBSTER &&
            Order->Salad == GREEN &&
            Order->Beverage == WINE)



1,4,S    Order->Dessert = CAKE;
2,0,B    {
2,1,S    Table_Data = Get_Table_Record(Table);
2,2,S    Table_Data.Is_Occupied = v_true;
2,3,S    Table_Data.Number_In_Party = Table_Data.Number_In_Party + 1;
2,4,S    Table_Data.Order[Seat] = MyOrder;
2,5,S    Add_Included_Dessert(&Table_Data.Order[Seat]);
2,6,S    switch(MyOrder.Entree)
2,7,B    case NO_ENTREE :
2,8,S    break;
2,9,B    case STEAK :
2,10,S    Table_Data.Check_Total = Table_Data.Check_Total + 14.0 + 10;
2,11,S    break;
2,12,B    case CHICKEN :
2,13,S    Table_Data.Check_Total = Table_Data.Check_Total + 10.0;
2,14,S    break;
2,15,B    case LOBSTER :
2,16,S    Table_Data.Check_Total = Table_Data.Check_Total + 18.0;
2,17,S    break;
2,18,B    case PASTA :
2,19,S    Table_Data.Check_Total = Table_Data.Check_Total + 12.0;
2,20,S    break;
2,21,S    Update_Table_Record(Table, Table_Data);
2,22,S    return 0;
3,0,B    {
3,1,S    Table_Data = Get_Table_Record(Table);
3,2,S    Table_Data.Is_Occupied = v_false;
3,3,S    Table_Data.Number_In_Party = 1;
3,4,B    for (Seat=0; Seat < 4; Seat++)

3,5,S    Table_Data.Order[Seat].Soup = NO_SOUP;
3,6,S    Table_Data.Order[Seat].Salad = NO_SALAD;
3,7,S    Table_Data.Order[Seat].Entree = NO_ENTREE;
3,8,S    Table_Data.Order[Seat].Dessert = NO_DESSERT;
3,9,S    Table_Data.Order[Seat].Beverage = NO_BEVERAGE;
3,10,S    Table_Data.Check_Total = 0;
3,11,S    Update_Table_Record(Table, Table_Data);
3,12,S    return 0;
4,0,B    {
4,1,S    Table_Data = Get_Table_Record(Table);
4,2,S    return (Table_Data.Check_Total);
5,0,B    {
5,1,S    int i = 0;
5,2,B    if(WaitingListSize > 9)

5,3,S    WaitingListSize = 0;
5,4,B    while(Name && *Name)


5,5,S    WaitingList[WaitingListSize][i++] = *Name;
5,6,S    Name++;
5,7,S    WaitingList[WaitingListSize++][i] = 0;
6,0,B    {
6,1,B    if(WaitingListIndex > 9)

6,2,S    WaitingListIndex = 0;
6,3,S    return WaitingList[WaitingListIndex++];
